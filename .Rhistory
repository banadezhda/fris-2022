d4 = read.table("./data4.txt")
d4
plot (V2, V3, col=V1, data = d4)
plot (data$V2, data$V3, col=data%V1)
plot(d4$V2, d4$V3, col=d4%V1)
plot(d4$V2, d4$V3, col=d4$V1)
plot(d4$V2, d4$V3, col=d4$V1+1)
png("data4.png")
plot(d4$V2, d4$V3, col=d4$V1+1)
dev.off()
plot(d4$V2, d4$V3, col=d4$V1+1, labels=d4$V1)
text(d4$V2, d4$V3, labels=d4$V1)
plot(d4$V2, d4$V3, col=d4$V1+1)
text(d4$V2, d4$V3-5, labels=d4$V1)
text(d4$V2, d4$V3-2, labels=d4$V1)
png("data4.png")
plot(d4$V2, d4$V3, col=d4$V1+1)
text(d4$V2, d4$V3-5, labels=d4$V1)
dev.off()
png("data4.png")
plot(d4$V2, d4$V3, col=d4$V1+1)
text(d4$V2, d4$V3-2, labels=labels(d4)-1)
labels(d4)
labels(d4)[[1]]
text(d4$V2, d4$V3-5, labels=labels(d4)[[1]]-1)
text(d4$V2, d4$V3-5, labels=int(labels(d4)[[1]])-1)
int("1")
integer("1")
integer("3")
text(d4$V2, d4$V3-5, labels=int(labels(d4)[[1]])
)
text(d4$V2, d4$V3-5, labels=labels(d4)[[1]])
dev.off()
install.packages('clusterGeneration')
install.packages('clusterGeneration')
install.packages('clusterGeneration')
install.packages('clusterGeneration')
library(clusterGeneration)
## Not run:
tmp1 <- genRandomClust(
numClust = 7,
sepVal = 0.3,
numNonNoisy = 5,
numNoisy = 3,
numOutlier = 5,
numReplicate = 2,
fileName = "chk1")
## End(Not run)
## Not run:
tmp2 <- genRandomClust(
numClust = 7,
sepVal = 0.3,
numNonNoisy = 5,
numNoisy = 3,
numOutlier = 5,
numReplicate = 2,
covMethod = "unifcorrmat",
fileName = "chk2")
## End(Not run)
## Not run:
tmp3 <- genRandomClust(
numClust = 2,
sepVal = -0.1,
numNonNoisy = 2,
numNoisy = 6,
numOutlier = 30,
numReplicate = 1,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
## End(Not run)
tmp3
plot(tmp3)
tmp3$datList
plot(tmp3$datList)
plot(tmp3$datList$x1,tmp3$datList$x2)
f= read.table("chk1_1.dat")
f
plot(f)
plot(f$v4, f$v1)
plot(f$v4, f$v1)
?plot
f= read.table("chk3_1.dat")
f
plot(f)
tmp3 <- genRandomClust(
numClust = 2,
sepVal = -0.1,
numNonNoisy = 2,
numNoisy = 6,
numOutlier = 30,
numReplicate = 1,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.8,
numNonNoisy = 2,
numNoisy = 6,
numOutlier = 30,
numReplicate = 1,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
f = read.table("chk3_1.dat")
plot(f)
c = read.table("chk3_1.mem")
plot(f, col=c)
plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.8,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 1,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
c = read.table("chk3_1.mem")
f = read.table("chk3_1.dat")
plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 0,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 2,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
f = read.table("chk3_1.dat"); c = read.table("chk3_1.mem"); plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 100,
numReplicate = 2,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
f = read.table("chk3_1.dat"); c = read.table("chk3_1.mem"); plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 100,
numReplicate = 200,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 100,
numReplicate = 20,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
f = read.table("chk3_1.dat"); c = read.table("chk3_1.mem"); plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 2,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 100,
numReplicate = 0,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
tmp3 <- genRandomClust(
numClust = 5,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 1,
clustszind = 1,
clustSizeEq = 80,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
f = read.table("chk3_1.dat"); c = read.table("chk3_1.mem"); plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 4,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 1,
clustszind = 2,
clustSizeEq = 10000,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
f = read.table("chk3_1.dat"); c = read.table("chk3_1.mem"); plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 4,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 1,
clustszind = 2,
clustSizeEq = 1,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
tmp3 <- genRandomClust(
numClust = 4,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 1,
clustszind = 2,
clustSizeEq = 2,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
f = read.table("chk3_1.dat"); c = read.table("chk3_1.mem"); plot(f, col=c$V1)
tmp3 <- genRandomClust(
numClust = 4,
sepVal = 0.6,
numNonNoisy = 2,
numNoisy = 0,
numOutlier = 0,
numReplicate = 1,
clustszind = 2,
clustSizeEq = 2,
rangeVar = c(10, 20),
covMethod = "unifcorrmat",
iniProjDirMethod = "naive",
projDirMethod = "fixedpoint",
fileName = "chk3")
set.seed(101)
x=matrix(rnorm(100*2),100,2)
x
plot(x)
set.seed(101); x=matrix(rnorm(100*2),1000,2)
plot(x)
set.seed(101); x=matrix(rnorm(100*2),2,2)
set.seed(101); x=matrix(rnorm(100*2),200,2)
set.seed(101); x=matrix(rnorm(100*2),200,2); plot(x)
set.seed(101); x=matrix(rnorm(100*2),100,2); plot(x)
set.seed(101); x=matrix(rnorm(1000*2),1000,2); plot(x)
xmean=matrix(rnorm(3*2,sd=4),3,2)
plot(xmean)
xmean=matrix(rnorm(3*2,sd=4),3,2)
plot(xmean)
xclusterd=x+xmean[which,]; plot(xclusterd,col=which,pch=19)
xclusterd=x+xmean[which,]
set.seed(101); x=matrix(rnorm(100000*2),100000,2); plot(x)
xclusterd=x+xmean[which,]
which=sample(1:3,100000,replace=TRUE)
xclusterd=x+xmean[which,]
xclusterd=x+xmean[which,]; plot(xclusterd,col=which,pch=19)
df = as.data.frame(xclusterd)
plot(df)
plot(df, col=which, pch=19)
df$V0 = which
plot(df, col=which, pch=19)
d=data.frame()
d$c = which
d=data.frame(c = which, x = df$V1, y = df$V2)
d[:100]
d[[:100]]
write.table(d, file="data6.txt")
q()
write.table(d, file="data6.txt", quote=F, col.names=F, row.names=F)
q()
